
@import "~font-awesome/css/font-awesome.css";
/* You can add global styles to this file, and also import other style files */
// import variables from bootstrap or change to your own bootstrap theme variables

// default values for bootstrap 4 beta for backwards compatibility,
// override by importing bootstrap variables before this file or by setting your own variables
$gray-100: #f8f9fa !default;
$gray-700: #495057 !default;
$gray-200: #e9ecef !default;
$blue: #007bff !default;
$purple: #a157ad !default;
$teal:  #008080 !default;
$table-cell-padding: 0.75rem !default;
$table-cell-padding-sm: 0.3rem !default;
$table-border-color: $gray-200 !default;

$font-weight-bold: bold !default;
$font-size-sm: 0.875rem !default;

$grid-breakpoints: (
	xs: 0,
	sm: 576px,
	md: 768px,
	lg: 992px,
	xl: 1200px
) !default;

// variables used by generic table
$gt-inline-edit-color: $blue !default;
$gt-totals-font-weight: $font-weight-bold !default;
$gt-totals-color: $gray-700 !default;
$gt-totals-bg: $gray-100 !default;
$gt-totals-font-size: $font-size-sm !default;
$gt-table-border-color: $table-border-color !default;
$gt-table-cell-padding: $table-cell-padding !default;
$gt-table-cell-padding-sm: $table-cell-padding-sm !default;
$gt-table-cell-padding-expanded: 0 !default;
$gt-medium-width: map-get($grid-breakpoints, md) !default;

// basic table styles for sorting and for stacked table layout
generic-table {
	table {
		thead tr {
			th {
				&.sort-enable {
					cursor: pointer;
					&:hover {
						text-decoration: underline;
					}
				}
				&.sort-asc {
					cursor: pointer;
					&:hover {
						text-decoration: underline;
					}
					&::after {
						content: '';
						display: inline-block;
						width: 0;
						height: 0;
						border-left: 5px solid transparent;
						border-right: 5px solid transparent;
						border-bottom: 5px solid #000;
						border-radius: 2px;
						margin-left: 4px;
						vertical-align: middle;
					}
				}
				&.sort-desc {
					cursor: pointer;
					&:hover {
						text-decoration: underline;
					}
					&::after {
						content: '';
						display: inline-block;
						width: 0;
						height: 0;
						border-left: 5px solid transparent;
						border-right: 5px solid transparent;
						border-top: 5px solid #000;
						border-radius: 2px;
						margin-left: 4px;
						vertical-align: middle;
					}
				}
				&.checkbox-column {
					min-width: 30px;
				}
			}
		}

		span.gt-row-label,
		th.gt-sort-label {
			display: none;
		}
		tr td.gt-button {
			vertical-align: middle;
			padding-top: 0;
			padding-bottom: 0;
			width: 1px;
		}

		tr.row-expanded > td {
			padding: $gt-table-cell-padding-expanded;
		}
		input.inline-edit {
			border: none;
			outline: none;
			line-height: initial;
			width: 100%;
			background: none;
			position: relative;
			text-align: inherit;
		}
		.gt-inline-edit {
			position: relative;
			&::before {
				opacity: 0;
				position: absolute;
				content: '';
				margin-left: -$gt-table-cell-padding;
				background: $gt-inline-edit-color;
				height: 1px;
				width: 100%;
				top: auto;
				bottom: -1px;
				transform: scaleX(0);
				transition: all 0.2s ease-in-out;
			}
			&.gt-edited::before {
				transform: scaleX(1);
				opacity: 1;
			}
			.gt-dropdown .dropdown-menu {
				animation: fade-in 0.2s ease-in-out;
				.dropdown-item {
					cursor: pointer;
				}
			}
			.gt-inline-edit-notice {
				opacity: 0;
				transition: opacity 0.5s ease-in-out;
				position: absolute;
				bottom: 0;
				left: 0;
				display: inline-block;
				width: 100%;
				font-size: 7px;
				text-transform: uppercase;
				color: $gt-inline-edit-color;
				text-align: center;
			}
			&.gt-edited .gt-inline-edit-notice {
				opacity: 1;
			}
		}

		thead.gt-totals {
			border-bottom: 2px solid $gt-table-border-color;
		}

		tfoot.gt-totals {
			border-top: 2px solid $gt-table-border-color;
		}
		.gt-totals tr td {
			font-weight: $gt-totals-font-weight;
			color: $gt-totals-color;
			background: $gt-totals-bg;
			font-size: $gt-totals-font-size;
		}
	}
	table.table-sm {
		.gt-inline-edit {
			&::before {
				margin-left: -$gt-table-cell-padding-sm;
			}
		}
	}
	gt-checkbox label {
		margin: 0;
		vertical-align: middle;
	}
}

.gt-dropdown-menu.show {
	max-height: 320px;
	overflow: auto;
}

// get break point for medium devices from bootstrap
@media (max-width: $gt-medium-width) {
	generic-table {
		table.table-stacked {
			thead tr {
				display: table;
				width: 100%;
				th {
					text-align: right;
					&:first-child {
						text-align: left;
					}
					&.sort-disable {
						display: none;
					}
					&.gt-sort-label {
						display: table-cell;
					}
				}
			}
			tr {
				& + tr {
					border-top: 1px solid #ddd;
				}

				td {
					display: block;
					border: none;
					> span {
						display: table-cell;
					}
					> span.gt-row-label {
						white-space: nowrap;
						font-weight: bold;
					}
					> span.gt-row-content {
						text-align: right;
						width: 100%;
					}
					&.hidden-stacked {
						display: none;
					}
				}
			}
		}
	}
}

@keyframes fade-in {
	0% {
		opacity: 0;
	}

	100% {
		opacity: 1;
	}
}

$grid-breakpoints: (
	xs: 0,
	sm: 576px,
	md: 768px,
	lg: 992px,
	xl: 1200px
) !default;
$gt-small-width: map-get($grid-breakpoints, sm) !default;

.gt-column-settings {
	position: relative;

	.gt-overlay {
		content: '';
		display: block;
		width: 100%;
		height: 100%;
		background: #fff;
		position: absolute;
		top: 0;
		opacity: 0.5;
		z-index: 3;
	}
}

.gt-column-settings-panel {
	position: absolute;
	width: 100%;

	.gt-column-settings-header {
		position: relative;
		z-index: 4;
		overflow: auto;
	}

	.gt-column-settings-item-wrapper {
		display: flex;
		flex-flow: column wrap;
		justify-content: flex-start;
		align-content: flex-start;
		position: relative;
		z-index: 4;
		width: 100%;
		min-height: 90px;
		overflow-x: auto;
	}
}

.gt-column-settings-item span {
	cursor: move;
}
.gt-column-settings-item:hover span {
	cursor: pointer;
}

.gt-column-settings-item {
	flex: 0 0 auto;
}

.gu-mirror {
	position: fixed !important;
	margin: 0 !important;
	z-index: 9999 !important;
	opacity: 0.8;
	-ms-filter: 'progid:DXImageTransform.Microsoft.Alpha(Opacity=80)';
	filter: alpha(opacity=80);
}
.gu-hide {
	display: none !important;
}
.gu-unselectable {
	-webkit-user-select: none !important;
	-moz-user-select: none !important;
	-ms-user-select: none !important;
	user-select: none !important;
}
.gu-transit {
	opacity: 0.2;
	-ms-filter: 'progid:DXImageTransform.Microsoft.Alpha(Opacity=20)';
	filter: alpha(opacity=20);
}

// get break point for small devices from bootstrap
@media (max-width: $gt-small-width) {
	/*.gt-column-settings-panel {
    width: 100vw !important;
    height: 100vh !important;
    margin-top: 0 !important;
    position: fixed !important;
    top: 0;
    left: 0;
  }*/

	.gt-column-settings-item-wrapper {
		flex-wrap: nowrap !important;
		overflow: auto;
		min-height: 100px;
	}
}



div.table-responsive {
	display: block;
	width: 100%;
	overflow-x: auto;
}

.side {
	width: 300px;
}
th {
	&.sort-enable {
		cursor: pointer;
		&:hover {
			text-decoration: underline;
		}
	}
	&.sort-asc {
		cursor: pointer;
		&:hover {
			text-decoration: underline;
		}
		&::after {
			content: '';
			display: inline-block;
			font: normal normal normal 14px/1 FontAwesome;
			font-size: inherit;
			text-rendering: auto;
			-webkit-font-smoothing: antialiased;
			margin-left: 4px;
		}
		&.sort-numeric::after {
			content: '\f162';
			border: none !important;
			vertical-align: baseline !important;
		}
		&.sort-string::after {
			content: '\f15d';
			border: none !important;
			vertical-align: baseline !important;
		}
	}
	&.sort-desc {
		cursor: pointer;
		&:hover {
			text-decoration: underline;
		}
		&::after {
			content: '';
			display: inline-block;
			font: normal normal normal 14px/1 FontAwesome;
			font-size: inherit;
			text-rendering: auto;
			-webkit-font-smoothing: antialiased;
			margin-left: 4px;
		}
		&.sort-numeric::after {
			content: '\f163';
			border: none !important;
			vertical-align: baseline !important;
		}
		&.sort-string::after {
			content: '\f15e';
			border: none !important;
			vertical-align: baseline !important;
		}
	}
}

tr {
	td.clickable > span.gt-row-content {
		cursor: pointer;
		font-weight: bold;
		color: #337ab7;
		text-decoration: none;
		&::before {
			content: '\f0da';
			font: normal normal normal 14px/1 FontAwesome;
			display: inline-block;
			width: 14px;
			color: #000;
		}
	}
	&.row-open {
		td.clickable > span.gt-row-content::before {
			content: '\f0d7';
		}
	}
	&.row-selected {
		background: #eff6fd;
	}
	&:active {
		background: #eff6fd !important;
	}
}
span.gt-highlight-search {
	background: yellow;
}

span.link {
	color: #0275d8;
	text-decoration: none;
	cursor: pointer;
	&:focus,
	&:hover {
		color: #014c8c;
		text-decoration: underline;
	}
}
.temp::after {
	content: '';
	display: block;
	width: 100%;
	height: calc(100% - 33px);
	background: #fff;
	position: absolute;
	top: 33px;
	opacity: 0.5;
	z-index: 0;
}

// get break point for small devices from bootstrap
@media (min-width: map-get($grid-breakpoints, md)) {
	.main {
		max-width: calc(100% - 300px);
	}
}

.bg-teal {
	background: #00ccb3;
	background: linear-gradient(#00b5ad, #00ccb3) !important;
}

.mobile-menu {
	background: #00b5ad;
	.text-white a {
		color: #ffffff;
		&:hover {
			text-decoration: underline;
		}
	}
}

$time: 300ms;
$width: 20px;
$height: 22px;
$thickness: 2px;
$middle: ($height - ($thickness * 2))/2;

.menu-icon {
	display: inline-block;
	content: '';
	width: $width;
	height: $height - $thickness;
	position: relative;
	cursor: pointer;
	vertical-align: text-bottom;
	&::after {
		display: block;
		content: '';
		width: $width;
		height: $thickness;
		background: #fff;
		top: 0;
		position: absolute;
		margin-top: $middle * 2;
		transition: opacity $time ease-in-out;
	}
	&::before {
		display: block;
		content: '';
		width: $width;
		height: $thickness;
		top: $middle;
		position: absolute;
		background: #fff;
		transition: transform $time ease-in-out;
	}
	&.active {
		&::before {
			transform: rotate3d(0, 0, 1, 45deg);
			animation: right $time ease-in-out;
			animation-direction: reverse;
		}
		&::after {
			opacity: 0;
		}
		& > div {
			background: rgba(0, 0, 0, 0);
			&::before {
				animation: left $time ease-in-out;
				animation-direction: reverse;
				transform: rotate3d(0, 0, 1, -45deg);
			}
		}
	}
	> div {
		display: block;
		content: '';
		width: $width;
		height: $thickness;
		top: 0;
		position: absolute;
		background: rgba(255, 255, 255, 1);
		transition: background $time ease-in-out;
		&::before {
			display: block;
			content: '';
			width: $width;
			height: $thickness;
			top: $middle;
			position: absolute;
			background: #fff;
			transition: transform $time ease-in-out;
		}
	}
}

@keyframes right {
	0% {
		transform: rotate3d(0, 0, 1, 45deg);
	}
	100% {
		transform: rotate3d(0, 0, 1, 0deg);
	}
}

@keyframes left {
	0% {
		transform: rotate3d(0, 0, 1, -45deg);
	}
	100% {
		transform: rotate3d(0, 0, 1, 0deg);
	}
}

pre[class*='language-'] {
	background: $gray-100;

	& > code {
		box-shadow: none;
		border-left: none;
		//background-image: linear-gradient(transparent 50%, rgba($gray-200, 0.5) 50%);
		//background-size: 3em 2.95em;
		background: none;
	}
}

pre[class*='language-']:before,
pre[class*='language-']:after {
	display: none;
}

.token.selector,
.token.attr-name,
.token.string,
.token.char,
.token.function,
.token.builtin,
.token.inserted {
	color: $blue;
}

.token.property,
.token.tag,
.token.boolean,
.token.number,
.token.function-name,
.token.constant,
.token.symbol,
.token.deleted {
	color: $purple;
}

.token.atrule,
.token.attr-value,
.token.keyword,
.token.class-name {
	color: $teal;
}